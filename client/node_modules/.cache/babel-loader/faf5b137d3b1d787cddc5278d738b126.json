{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport notesService from './notesService';\nconst initialState = {\n  notes: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; //* create async thunk to accept actions and a function which returns promise and action type based on that promise\n// Create new note\n\nexport const createNote = createAsyncThunk('notes/create', async (noteData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await notesService.createNote(noteData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Get notes\n\nexport const getNotes = createAsyncThunk('notes/getAll', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await notesService.getNotes(token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Delete notes\n\nexport const deleteNote = createAsyncThunk('notes/delete', async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await notesService.deleteNote(id, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); //creating slice to combined reducer and action\n\nexport const noteSlice = createSlice({\n  name: 'note',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(createNote.pending, state => {\n      state.isLoading = true;\n    }).addCase(createNote.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.notes.push(action.payload);\n    }).addCase(createNote.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getNotes.pending, state => {\n      state.isLoading = true;\n    }).addCase(getNotes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.notes = action.payload;\n    }).addCase(getNotes.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(deleteNote.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteNote.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.notes = state.goals.filter(note => note._id !== action.payload.id);\n    }).addCase(deleteNote.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","notesService","initialState","notes","isError","isSuccess","isLoading","message","createNote","noteData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","getNotes","_","deleteNote","id","noteSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","goals","filter","note","_id","actions","reducer"],"sources":["N:/Projects/Surge/Surge-Global-Assignment/client/src/features/notes/notesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport notesService from './notesService'\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n}\r\n\r\n//* create async thunk to accept actions and a function which returns promise and action type based on that promise\r\n\r\n// Create new note\r\nexport const createNote = createAsyncThunk(\r\n  'notes/create',\r\n  async (noteData, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await notesService.createNote(noteData, token)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n)\r\n\r\n// Get notes\r\nexport const getNotes = createAsyncThunk(\r\n  'notes/getAll',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      \r\n      return await notesService.getNotes(token)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n)\r\n\r\n// Delete notes\r\nexport const deleteNote = createAsyncThunk(\r\n  'notes/delete',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token\r\n      return await notesService.deleteNote(id, token)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n)\r\n\r\n//creating slice to combined reducer and action\r\n\r\nexport const noteSlice = createSlice({\r\n  name: 'note',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createNote.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(createNote.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.notes.push(action.payload)\r\n      })\r\n      .addCase(createNote.rejected, (state, action) => {\r\n        state.isLoading = false\r\n        state.isError = true\r\n        state.message = action.payload\r\n      })\r\n      .addCase(getNotes.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getNotes.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.notes = action.payload\r\n      })\r\n      .addCase(getNotes.rejected, (state, action) => {\r\n        state.isLoading = false\r\n        state.isError = true\r\n        state.message = action.payload\r\n      })\r\n      .addCase(deleteNote.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(deleteNote.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.notes = state.goals.filter(\r\n          (note) => note._id !== action.payload.id\r\n        )\r\n      })\r\n      .addCase(deleteNote.rejected, (state, action) => {\r\n        state.isLoading = false\r\n        state.isError = true\r\n        state.message = action.payload\r\n      })\r\n  },\r\n})\r\n\r\nexport const { reset } = noteSlice.actions\r\nexport default noteSlice.reducer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}